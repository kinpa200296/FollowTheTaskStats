//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FollowTheTaskStats.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.DataBase")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManagerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WorkerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManagerId {
            get {
                return this.ManagerIdField;
            }
            set {
                if ((this.ManagerIdField.Equals(value) != true)) {
                    this.ManagerIdField = value;
                    this.RaisePropertyChanged("ManagerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WorkerId {
            get {
                return this.WorkerIdField;
            }
            set {
                if ((this.WorkerIdField.Equals(value) != true)) {
                    this.WorkerIdField = value;
                    this.RaisePropertyChanged("WorkerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manager", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.DataBase")]
    [System.SerializableAttribute()]
    public partial class Manager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] TrackedTasksIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] WorkersIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] TrackedTasksIds {
            get {
                return this.TrackedTasksIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackedTasksIdsField, value) != true)) {
                    this.TrackedTasksIdsField = value;
                    this.RaisePropertyChanged("TrackedTasksIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] WorkersIds {
            get {
                return this.WorkersIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkersIdsField, value) != true)) {
                    this.WorkersIdsField = value;
                    this.RaisePropertyChanged("WorkersIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.DataBase")]
    [System.SerializableAttribute()]
    public partial class Worker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ManagerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] QuestsIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ManagerId {
            get {
                return this.ManagerIdField;
            }
            set {
                if ((this.ManagerIdField.Equals(value) != true)) {
                    this.ManagerIdField = value;
                    this.RaisePropertyChanged("ManagerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] QuestsIds {
            get {
                return this.QuestsIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestsIdsField, value) != true)) {
                    this.QuestsIdsField = value;
                    this.RaisePropertyChanged("QuestsIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackedTask", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.DataBase")]
    [System.SerializableAttribute()]
    public partial class TrackedTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursSpentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManagerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] QuestsIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.CompletionDateField;
            }
            set {
                if ((this.CompletionDateField.Equals(value) != true)) {
                    this.CompletionDateField = value;
                    this.RaisePropertyChanged("CompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoursSpent {
            get {
                return this.HoursSpentField;
            }
            set {
                if ((this.HoursSpentField.Equals(value) != true)) {
                    this.HoursSpentField = value;
                    this.RaisePropertyChanged("HoursSpent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((this.IsFinishedField.Equals(value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManagerId {
            get {
                return this.ManagerIdField;
            }
            set {
                if ((this.ManagerIdField.Equals(value) != true)) {
                    this.ManagerIdField = value;
                    this.RaisePropertyChanged("ManagerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] QuestsIds {
            get {
                return this.QuestsIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestsIdsField, value) != true)) {
                    this.QuestsIdsField = value;
                    this.RaisePropertyChanged("QuestsIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quest", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.DataBase")]
    [System.SerializableAttribute()]
    public partial class Quest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursSpentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackedTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.CompletionDateField;
            }
            set {
                if ((this.CompletionDateField.Equals(value) != true)) {
                    this.CompletionDateField = value;
                    this.RaisePropertyChanged("CompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoursSpent {
            get {
                return this.HoursSpentField;
            }
            set {
                if ((this.HoursSpentField.Equals(value) != true)) {
                    this.HoursSpentField = value;
                    this.RaisePropertyChanged("HoursSpent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((this.IsFinishedField.Equals(value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackedTaskId {
            get {
                return this.TrackedTaskIdField;
            }
            set {
                if ((this.TrackedTaskIdField.Equals(value) != true)) {
                    this.TrackedTaskIdField = value;
                    this.RaisePropertyChanged("TrackedTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkerId {
            get {
                return this.WorkerIdField;
            }
            set {
                if ((this.WorkerIdField.Equals(value) != true)) {
                    this.WorkerIdField = value;
                    this.RaisePropertyChanged("WorkerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagerModel", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.Models")]
    [System.SerializableAttribute()]
    public partial class ManagerModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.TrackedTask[] TrackedTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.Worker[] WorkersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.TrackedTask[] TrackedTasks {
            get {
                return this.TrackedTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackedTasksField, value) != true)) {
                    this.TrackedTasksField = value;
                    this.RaisePropertyChanged("TrackedTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.Worker[] Workers {
            get {
                return this.WorkersField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkersField, value) != true)) {
                    this.WorkersField = value;
                    this.RaisePropertyChanged("Workers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkerModel", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.Models")]
    [System.SerializableAttribute()]
    public partial class WorkerModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.Manager ManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.Quest[] QuestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.Manager Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.Quest[] Quests {
            get {
                return this.QuestsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestsField, value) != true)) {
                    this.QuestsField = value;
                    this.RaisePropertyChanged("Quests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackedTaskModel", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.Models")]
    [System.SerializableAttribute()]
    public partial class TrackedTaskModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursSpentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.Manager ManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.Quest[] QuestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.CompletionDateField;
            }
            set {
                if ((this.CompletionDateField.Equals(value) != true)) {
                    this.CompletionDateField = value;
                    this.RaisePropertyChanged("CompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoursSpent {
            get {
                return this.HoursSpentField;
            }
            set {
                if ((this.HoursSpentField.Equals(value) != true)) {
                    this.HoursSpentField = value;
                    this.RaisePropertyChanged("HoursSpent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((this.IsFinishedField.Equals(value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.Manager Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.Quest[] Quests {
            get {
                return this.QuestsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestsField, value) != true)) {
                    this.QuestsField = value;
                    this.RaisePropertyChanged("Quests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestModel", Namespace="http://schemas.datacontract.org/2004/07/FollowTheTask.ServiceModels.Models")]
    [System.SerializableAttribute()]
    public partial class QuestModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeadLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HoursSpentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssuedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.TrackedTask TrackedTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FollowTheTaskStats.ServiceReference.Worker WorkerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletionDate {
            get {
                return this.CompletionDateField;
            }
            set {
                if ((this.CompletionDateField.Equals(value) != true)) {
                    this.CompletionDateField = value;
                    this.RaisePropertyChanged("CompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeadLine {
            get {
                return this.DeadLineField;
            }
            set {
                if ((this.DeadLineField.Equals(value) != true)) {
                    this.DeadLineField = value;
                    this.RaisePropertyChanged("DeadLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HoursSpent {
            get {
                return this.HoursSpentField;
            }
            set {
                if ((this.HoursSpentField.Equals(value) != true)) {
                    this.HoursSpentField = value;
                    this.RaisePropertyChanged("HoursSpent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFinished {
            get {
                return this.IsFinishedField;
            }
            set {
                if ((this.IsFinishedField.Equals(value) != true)) {
                    this.IsFinishedField = value;
                    this.RaisePropertyChanged("IsFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssuedDate {
            get {
                return this.IssuedDateField;
            }
            set {
                if ((this.IssuedDateField.Equals(value) != true)) {
                    this.IssuedDateField = value;
                    this.RaisePropertyChanged("IssuedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.TrackedTask TrackedTask {
            get {
                return this.TrackedTaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackedTaskField, value) != true)) {
                    this.TrackedTaskField = value;
                    this.RaisePropertyChanged("TrackedTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FollowTheTaskStats.ServiceReference.Worker Worker {
            get {
                return this.WorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerField, value) != true)) {
                    this.WorkerField = value;
                    this.RaisePropertyChanged("Worker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IFollowTheTaskService")]
    public interface IFollowTheTaskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetUsers", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetUsersResponse")]
        FollowTheTaskStats.ServiceReference.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetUsers", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetUsersResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetUserById", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetUserByIdResponse")]
        FollowTheTaskStats.ServiceReference.User GetUserById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetUserById", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.User> GetUserByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetUserByName", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetUserByNameResponse")]
        FollowTheTaskStats.ServiceReference.User GetUserByName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetUserByName", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.User> GetUserByNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManagers", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagersResponse")]
        FollowTheTaskStats.ServiceReference.Manager[] GetManagers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManagers", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagersResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Manager[]> GetManagersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagerResponse")]
        FollowTheTaskStats.ServiceReference.Manager GetManager(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Manager> GetManagerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkers", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkersResponse")]
        FollowTheTaskStats.ServiceReference.Worker[] GetWorkers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkers", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkersResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Worker[]> GetWorkersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkersForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkersForManagerResponse")]
        FollowTheTaskStats.ServiceReference.Worker[] GetWorkersForManager(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkersForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkersForManagerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Worker[]> GetWorkersForManagerAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorker", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerResponse")]
        FollowTheTaskStats.ServiceReference.Worker GetWorker(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorker", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Worker> GetWorkerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTasks", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTasksResponse")]
        FollowTheTaskStats.ServiceReference.TrackedTask[] GetTrackedTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTasks", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTasksResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTask[]> GetTrackedTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTasksForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTasksForManagerResponse")]
        FollowTheTaskStats.ServiceReference.TrackedTask[] GetTrackedTasksForManager(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTasksForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTasksForManagerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTask[]> GetTrackedTasksForManagerAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTask", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskResponse")]
        FollowTheTaskStats.ServiceReference.TrackedTask GetTrackedTask(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTask", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTask> GetTrackedTaskAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuests", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestsResponse")]
        FollowTheTaskStats.ServiceReference.Quest[] GetQuests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuests", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestsResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest[]> GetQuestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestsForWorker", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestsForWorkerResponse")]
        FollowTheTaskStats.ServiceReference.Quest[] GetQuestsForWorker(int workerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestsForWorker", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestsForWorkerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest[]> GetQuestsForWorkerAsync(int workerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestsForTrackedTask", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestsForTrackedTaskResponse")]
        FollowTheTaskStats.ServiceReference.Quest[] GetQuestsForTrackedTask(int trackedTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestsForTrackedTask", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestsForTrackedTaskResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest[]> GetQuestsForTrackedTaskAsync(int trackedTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuest", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestResponse")]
        FollowTheTaskStats.ServiceReference.Quest GetQuest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuest", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest> GetQuestAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManagerModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagerModelsResponse")]
        FollowTheTaskStats.ServiceReference.ManagerModel[] GetManagerModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManagerModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagerModelsResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.ManagerModel[]> GetManagerModelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManagerModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagerModelResponse")]
        FollowTheTaskStats.ServiceReference.ManagerModel GetManagerModel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetManagerModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetManagerModelResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.ManagerModel> GetManagerModelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkerModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerModelsResponse")]
        FollowTheTaskStats.ServiceReference.WorkerModel[] GetWorkerModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkerModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerModelsResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.WorkerModel[]> GetWorkerModelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkerModelsForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerModelsForManagerResponse")]
        FollowTheTaskStats.ServiceReference.WorkerModel[] GetWorkerModelsForManager(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkerModelsForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerModelsForManagerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.WorkerModel[]> GetWorkerModelsForManagerAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkerModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerModelResponse")]
        FollowTheTaskStats.ServiceReference.WorkerModel GetWorkerModel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetWorkerModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetWorkerModelResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.WorkerModel> GetWorkerModelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelsResponse")]
        FollowTheTaskStats.ServiceReference.TrackedTaskModel[] GetTrackedTaskModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelsResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTaskModel[]> GetTrackedTaskModelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelsForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelsForManagerResponse")]
        FollowTheTaskStats.ServiceReference.TrackedTaskModel[] GetTrackedTaskModelsForManager(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelsForManager", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelsForManagerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTaskModel[]> GetTrackedTaskModelsForManagerAsync(int managerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelResponse")]
        FollowTheTaskStats.ServiceReference.TrackedTaskModel GetTrackedTaskModel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetTrackedTaskModelResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTaskModel> GetTrackedTaskModelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelsResponse")]
        FollowTheTaskStats.ServiceReference.QuestModel[] GetQuestModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModels", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelsResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel[]> GetQuestModelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForWorker", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForWorkerResponse")]
        FollowTheTaskStats.ServiceReference.QuestModel[] GetQuestModelsForWorker(int workerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForWorker", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForWorkerResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel[]> GetQuestModelsForWorkerAsync(int workerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForTrackedTask", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForTrackedTaskResponse")]
        FollowTheTaskStats.ServiceReference.QuestModel[] GetQuestModelsForTrackedTask(int trackedTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForTrackedTask", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelsForTrackedTaskResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel[]> GetQuestModelsForTrackedTaskAsync(int trackedTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelResponse")]
        FollowTheTaskStats.ServiceReference.QuestModel GetQuestModel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFollowTheTaskService/GetQuestModel", ReplyAction="http://tempuri.org/IFollowTheTaskService/GetQuestModelResponse")]
        System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel> GetQuestModelAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFollowTheTaskServiceChannel : FollowTheTaskStats.ServiceReference.IFollowTheTaskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FollowTheTaskServiceClient : System.ServiceModel.ClientBase<FollowTheTaskStats.ServiceReference.IFollowTheTaskService>, FollowTheTaskStats.ServiceReference.IFollowTheTaskService {
        
        public FollowTheTaskServiceClient() {
        }
        
        public FollowTheTaskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FollowTheTaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FollowTheTaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FollowTheTaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FollowTheTaskStats.ServiceReference.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.User GetUserById(string id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.User> GetUserByIdAsync(string id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.User GetUserByName(string username) {
            return base.Channel.GetUserByName(username);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.User> GetUserByNameAsync(string username) {
            return base.Channel.GetUserByNameAsync(username);
        }
        
        public FollowTheTaskStats.ServiceReference.Manager[] GetManagers() {
            return base.Channel.GetManagers();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Manager[]> GetManagersAsync() {
            return base.Channel.GetManagersAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.Manager GetManager(int id) {
            return base.Channel.GetManager(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Manager> GetManagerAsync(int id) {
            return base.Channel.GetManagerAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.Worker[] GetWorkers() {
            return base.Channel.GetWorkers();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Worker[]> GetWorkersAsync() {
            return base.Channel.GetWorkersAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.Worker[] GetWorkersForManager(int managerId) {
            return base.Channel.GetWorkersForManager(managerId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Worker[]> GetWorkersForManagerAsync(int managerId) {
            return base.Channel.GetWorkersForManagerAsync(managerId);
        }
        
        public FollowTheTaskStats.ServiceReference.Worker GetWorker(int id) {
            return base.Channel.GetWorker(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Worker> GetWorkerAsync(int id) {
            return base.Channel.GetWorkerAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.TrackedTask[] GetTrackedTasks() {
            return base.Channel.GetTrackedTasks();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTask[]> GetTrackedTasksAsync() {
            return base.Channel.GetTrackedTasksAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.TrackedTask[] GetTrackedTasksForManager(int managerId) {
            return base.Channel.GetTrackedTasksForManager(managerId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTask[]> GetTrackedTasksForManagerAsync(int managerId) {
            return base.Channel.GetTrackedTasksForManagerAsync(managerId);
        }
        
        public FollowTheTaskStats.ServiceReference.TrackedTask GetTrackedTask(int id) {
            return base.Channel.GetTrackedTask(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTask> GetTrackedTaskAsync(int id) {
            return base.Channel.GetTrackedTaskAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.Quest[] GetQuests() {
            return base.Channel.GetQuests();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest[]> GetQuestsAsync() {
            return base.Channel.GetQuestsAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.Quest[] GetQuestsForWorker(int workerId) {
            return base.Channel.GetQuestsForWorker(workerId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest[]> GetQuestsForWorkerAsync(int workerId) {
            return base.Channel.GetQuestsForWorkerAsync(workerId);
        }
        
        public FollowTheTaskStats.ServiceReference.Quest[] GetQuestsForTrackedTask(int trackedTaskId) {
            return base.Channel.GetQuestsForTrackedTask(trackedTaskId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest[]> GetQuestsForTrackedTaskAsync(int trackedTaskId) {
            return base.Channel.GetQuestsForTrackedTaskAsync(trackedTaskId);
        }
        
        public FollowTheTaskStats.ServiceReference.Quest GetQuest(int id) {
            return base.Channel.GetQuest(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.Quest> GetQuestAsync(int id) {
            return base.Channel.GetQuestAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.ManagerModel[] GetManagerModels() {
            return base.Channel.GetManagerModels();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.ManagerModel[]> GetManagerModelsAsync() {
            return base.Channel.GetManagerModelsAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.ManagerModel GetManagerModel(int id) {
            return base.Channel.GetManagerModel(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.ManagerModel> GetManagerModelAsync(int id) {
            return base.Channel.GetManagerModelAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.WorkerModel[] GetWorkerModels() {
            return base.Channel.GetWorkerModels();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.WorkerModel[]> GetWorkerModelsAsync() {
            return base.Channel.GetWorkerModelsAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.WorkerModel[] GetWorkerModelsForManager(int managerId) {
            return base.Channel.GetWorkerModelsForManager(managerId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.WorkerModel[]> GetWorkerModelsForManagerAsync(int managerId) {
            return base.Channel.GetWorkerModelsForManagerAsync(managerId);
        }
        
        public FollowTheTaskStats.ServiceReference.WorkerModel GetWorkerModel(int id) {
            return base.Channel.GetWorkerModel(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.WorkerModel> GetWorkerModelAsync(int id) {
            return base.Channel.GetWorkerModelAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.TrackedTaskModel[] GetTrackedTaskModels() {
            return base.Channel.GetTrackedTaskModels();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTaskModel[]> GetTrackedTaskModelsAsync() {
            return base.Channel.GetTrackedTaskModelsAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.TrackedTaskModel[] GetTrackedTaskModelsForManager(int managerId) {
            return base.Channel.GetTrackedTaskModelsForManager(managerId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTaskModel[]> GetTrackedTaskModelsForManagerAsync(int managerId) {
            return base.Channel.GetTrackedTaskModelsForManagerAsync(managerId);
        }
        
        public FollowTheTaskStats.ServiceReference.TrackedTaskModel GetTrackedTaskModel(int id) {
            return base.Channel.GetTrackedTaskModel(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.TrackedTaskModel> GetTrackedTaskModelAsync(int id) {
            return base.Channel.GetTrackedTaskModelAsync(id);
        }
        
        public FollowTheTaskStats.ServiceReference.QuestModel[] GetQuestModels() {
            return base.Channel.GetQuestModels();
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel[]> GetQuestModelsAsync() {
            return base.Channel.GetQuestModelsAsync();
        }
        
        public FollowTheTaskStats.ServiceReference.QuestModel[] GetQuestModelsForWorker(int workerId) {
            return base.Channel.GetQuestModelsForWorker(workerId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel[]> GetQuestModelsForWorkerAsync(int workerId) {
            return base.Channel.GetQuestModelsForWorkerAsync(workerId);
        }
        
        public FollowTheTaskStats.ServiceReference.QuestModel[] GetQuestModelsForTrackedTask(int trackedTaskId) {
            return base.Channel.GetQuestModelsForTrackedTask(trackedTaskId);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel[]> GetQuestModelsForTrackedTaskAsync(int trackedTaskId) {
            return base.Channel.GetQuestModelsForTrackedTaskAsync(trackedTaskId);
        }
        
        public FollowTheTaskStats.ServiceReference.QuestModel GetQuestModel(int id) {
            return base.Channel.GetQuestModel(id);
        }
        
        public System.Threading.Tasks.Task<FollowTheTaskStats.ServiceReference.QuestModel> GetQuestModelAsync(int id) {
            return base.Channel.GetQuestModelAsync(id);
        }
    }
}
